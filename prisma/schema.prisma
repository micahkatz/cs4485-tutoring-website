// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model user {
  userID  Int   @id @unique   @default(autoincrement())
  tutorID tutor?     //user can have 0 or 1 relation to a tutor ID. All tutors are users, but not all users are tutors
  email  String 
  first_name  String
  last_name   String
  password    String
  totalHours  Int    @default(0)
}

model tutor {
  tutorID Int @id @default(autoincrement())
  user  user  @relation(fields: [fk_userID], references: [userID])
  fk_userID Int @unique  //This is the value in the DB
  about_me String
  totalHours Int @default(0)
}

// model subject {
//   subjectID Int @id @default(autoincrement())
//   name String
//   description String
// }

// model availability {
//   startDate String
//   endDate String
//   daysUntilRepeat Int
//   monthsUntilRepeat Int
//   startTime String
//   endTime String
//   daysOfWeek String
// }

// model appointment {
//   appointID Int @id @default(autoincrement())
//   startTimeStamp String
//   endTimeStamp String
//   date String
// }

// model tutors_subjects{

// }

// model user_favorites {

// }



///Example

// model User {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   email     String   @unique
//   name      String?
//   role      Role     @default(USER)
//   posts     Post[]
// }

// model Post {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   published Boolean  @default(false)
//   title     String   @db.VarChar(255)
//   author    User?    @relation(fields: [authorId], references: [id])
//   authorId  Int?
// }

// enum Role {
//   USER
//   ADMIN
// }